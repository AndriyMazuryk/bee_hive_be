type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  occupation: String!
  location: String!
  birthDate: String!
  userInfo: String!
  createdAt: String!
  updatedAt: String
  avatar: Photo
}

type Response {
  success: Boolean!
  message: String
}

type Query {
  getAllUsers: [User]!
  currentUser: User
  getUserById(userId: ID!): User
  getSubscribersByUserId(userId: ID!): [User]!
  getSubscriptionsByUserId(userId: ID!): [User]!
}

type Mutation {
  createUser(
    firstName: String!
    lastName: String!
    email: String!
    password: String!
    occupation: String!
    location: String!
    birthDate: String!
    userInfo: String!
  ): Response!

  updateUser(
    firstName: String
    lastName: String
    email: String
    password: String
    occupation: String
    location: String
    birthDate: String
    userInfo: String
  ): Response!

  removeUser(userId: ID!): Boolean!

  subscribeToUser(userIdToSubscribe: ID!): Response!
}
